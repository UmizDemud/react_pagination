{"version":3,"sources":["utils/generateKey.ts","components/Pagination/Pagination.tsx","utils/sliceIntoChunks.ts","App.tsx","utils.ts","index.tsx"],"names":["generateKey","name","num","Pagination","items","total","itemsPerPage","currentPage","setPage","pages","itemsPerChunk","slicedItems","firstItemIndex","lastItemIndex","push","slice","sliceIntoChunks","handlePageChange","e","target","disable","preventDefault","className","cn","disabled","href","onClick","map","_el","i","active","length","pageItem","App","from","to","numbers","n","getNumbers","useState","setItemsPerPage","setCurrentPage","id","value","onChange","parseInt","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00880469.chunk.js","sourcesContent":["export const generateKey = (name:string, num: number) => {\n  return `${name}_${num}}`;\n};\n","import cn from 'classnames';\nimport { generateKey } from '../../utils/generateKey';\nimport sliceIntoChunks from '../../utils/sliceIntoChunks';\n\ntype Props = {\n  items: string[],\n  total: number,\n  itemsPerPage: number,\n  currentPage: number,\n  setPage: React.Dispatch<React.SetStateAction<number>>,\n};\n\nexport const Pagination = ({\n  items,\n  total,\n  itemsPerPage,\n  currentPage = 1,\n  setPage,\n}: Props) => {\n  const pages = sliceIntoChunks(\n    items,\n    total,\n    itemsPerPage,\n  );\n\n  const handlePageChange = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    target: number,\n    disable: number,\n  ) => {\n    if (disable === target) {\n      e.preventDefault();\n    } else {\n      setPage(target);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={(e) => handlePageChange(e, currentPage - 1, 0)}\n          >\n            «\n          </a>\n        </li>\n\n        {pages.map((_el, i) => (\n          <li\n            key={generateKey('pageLink', i)}\n            className={cn(\n              'page-item',\n              { active: (i + 1) === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${i + 1}`}\n              onClick={(e) => handlePageChange(e, i + 1, currentPage)}\n            >\n              {i + 1}\n            </a>\n          </li>\n        ))}\n\n        <li className={cn(\n          'page-item',\n          { disabled: currentPage === pages.length },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pages.length}\n            onClick={(e) => handlePageChange(\n              e,\n              currentPage + 1,\n              pages.length + 1,\n            )}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {pages[currentPage - 1].map((pageItem, i) => (\n          <li data-cy=\"item\" key={generateKey('item', i)}>\n            {pageItem}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","export default function sliceIntoChunks<T>(\n  items: T[],\n  total: number,\n  itemsPerChunk: number,\n): T[][] {\n  const slicedItems = [];\n\n  for (\n    let firstItemIndex = 0;\n    firstItemIndex < total;\n    firstItemIndex += itemsPerChunk\n  ) {\n    const lastItemIndex = firstItemIndex + itemsPerChunk < total\n      ? firstItemIndex + itemsPerChunk\n      : total;\n\n    slicedItems.push(items.slice(\n      firstItemIndex,\n      lastItemIndex,\n    ));\n  }\n\n  return slicedItems;\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const items = getNumbers(1, total)\n    .map(n => `Item ${n}`);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const firstItemIndex = (currentPage - 1) * itemsPerPage + 1;\n  const lastItemIndex = currentPage * itemsPerPage > total\n    ? total\n    : currentPage * itemsPerPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} `\n        + `(items ${firstItemIndex} - ${lastItemIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={e => {\n              setItemsPerPage(parseInt(e.target.value, 10));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={items}\n        total={total}\n        itemsPerPage={itemsPerPage}\n        currentPage={currentPage}\n        setPage={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}